server:
  port: 8082
  # servlet:
  #   context-path: /api
    
spring:
  application:
    name: auth-service

  datasource:
    url: jdbc:postgresql://localhost:5432/auth-db
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  kafka:   # âœ… keep Kafka config here
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    admin:
      auto-create: true
    topic:
      mail: mail-notification
      web: web-notification

jwt:
  refresh:
    secret: YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXphYmNkZWYx
    expiration: 36000
  access:
    secret: der5tghjiolo987ytgvcdswerdfgyu76t54e345rtyu8ijnbgtrdsxcdfew2
    expiration: 288000

logging:
  level:
    org.apache.kafka.clients.producer: WARN

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info
  info:
    env:
      enabled: true

info:
  app:
    name: auth-service
    description: Auth Security management service
    version: 1.0.0
  author: Sanket Pawar

app:
  forgot-password-web-url: https://example.com/forgot-password
